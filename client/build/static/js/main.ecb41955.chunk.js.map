{"version":3,"sources":["utils/restClient.js","components/Graph.js","App.js","index.js"],"names":["getDotStr","a","async","axios","get","response","data","console","log","Graph","props","this","dotStr","d3","graphviz","renderDot","setGraph","className","src","type","Component","App","state","setState","onClick","ReactDOM","render","document","getElementById"],"mappings":"oQAeO,SAAeA,IAAf,eAAAC,EAAAC,OAAA,2EAAAD,EAAA,MAEwBE,IAAMC,IAAI,YAFlC,cAEOC,EAFP,yBAGQA,EAASC,KAAKA,MAHtB,gCAMCC,QAAQC,IAAI,QAAZ,MAND,wD,ICaQC,E,YAtBb,WAAYC,GAAO,qEACXA,I,wEAINH,QAAQC,IAAI,kCAAmCG,KAAKD,MAAME,QAC1DC,IAAU,UAAUC,WAAWC,UAAUJ,KAAKD,MAAME,U,2CAIlDD,KAAKK,a,+BAIP,OACI,yBAAKC,UAAU,SACX,4BAAQC,IAAI,wCAAwCC,KAAK,2B,GAlBjDC,aCqCLC,E,YAjCb,WAAYX,GAAO,IAAD,8BAChB,4CAAMA,KACDY,MAAQ,CACXV,OAAQ,IAHM,E,0KAQKZ,K,OAAfY,E,OACNL,QAAQC,IAAI,eAAgBI,GAC5BD,KAAKY,SAAS,CAACX,WACfL,QAAQC,IAAIG,KAAKW,MAAMV,Q,gFAGf,IAAD,OACP,OACE,yBAAKK,UAAU,OACb,4BAAQA,UAAU,cAChB,wBAAIA,UAAU,aAAd,gCAEF,4BAAQC,IAAI,wCAAwCC,KAAK,sBACzD,kBAAC,EAAD,CACEP,OAAQD,KAAKW,MAAMV,SAEpBD,KAAKW,MAAMV,OACZ,4BAAQK,UAAU,SAASO,QAAS,kBAAM,EAAKR,aAC5C,iB,GA5BOI,a,OCClBK,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.ecb41955.chunk.js","sourcesContent":["import axios from 'axios'\n\n// function that pings server for testing\nexport function pingServer(logMessage) {\n    console.log(logMessage);\n    axios.get('/ping')\n    .then(function (response) {\n        console.log('SUCCESS', response);\n    })\n    .catch(function (error) {\n        console.log('ERROR', error);\n    });\n}\n\n// get a dot string from server for test rendering\nexport async function getDotStr() {\n    try {\n        const response = await axios.get('/dotstr');\n        return response.data.data;\n    }\n    catch (err) {\n        console.log('Error', err)\n    }\n}\n","import React, { Component } from 'react';\nimport * as d3 from 'd3'\nimport * as d3Graphviz from 'd3-graphviz';\n\nclass Graph extends Component {\n\n  constructor(props){\n    super(props);\n  }\n  \n  setGraph() {\n    console.log('In Graph component DOT source =', this.props.dotStr);\n    d3.select(\".graph\").graphviz().renderDot(this.props.dotStr);\n  }\n\n  componentDidUpdate() {\n      this.setGraph();\n  }\n\n  render() {\n    return (\n        <div className=\"graph\">\n            <script src=\"https://unpkg.com/viz.js@1.8.0/viz.js\" type=\"javascript/worker\"></script>\n        </div>\n    );\n  }\n}\n\nexport default Graph;","import React, { Component } from 'react';\nimport * as d3 from 'd3'\nimport * as d3Graphviz from 'd3-graphviz';\nimport { getDotStr } from './utils/restClient'\nimport Graph from './components/Graph'\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      dotStr: '',\n    };\n  }\n  \n  async setGraph() {\n    const dotStr = await getDotStr();\n    console.log('DOT source =', dotStr);\n    this.setState({dotStr})\n    console.log(this.state.dotStr)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">Welcome to interactive CDCL</h1>\n        </header>\n        <script src=\"https://unpkg.com/viz.js@1.8.0/viz.js\" type=\"javascript/worker\"></script>\n        <Graph\n          dotStr={this.state.dotStr}\n        />\n        {this.state.dotStr}\n        <button className=\"square\" onClick={() => this.setGraph()}>\n          {'Click me'}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// registerServiceWorker();\n"],"sourceRoot":""}